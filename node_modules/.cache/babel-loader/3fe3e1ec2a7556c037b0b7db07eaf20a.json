{"ast":null,"code":"var _jsxFileName = \"/Users/jperakis/Desktop/winefy-front/src/Views/Quiz.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Navigation from '../Components/Navigation';\nimport { questionBank } from '../Util/QuizBank';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quiz = ({\n  answers,\n  setAnswers\n}) => {\n  _s();\n\n  let {\n    id\n  } = useParams();\n\n  const updateAnswers = e => {\n    setAnswers(old => ({ ...old,\n      [id]: e.target.value\n    }));\n  };\n\n  const findPersonality = ans => {\n    // counts order is E, N, T, P, I, S, F, J\n    let arr = Object.values(ans);\n    let counts = [0, 0, 0, 0, 0, 0, 0, 0];\n\n    for (let i = 0; i < arr.length - 4; i++) {\n      counts[i % 8] += parseInt(arr[i]);\n    }\n\n    let personality = counts[0] > counts[4] ? \"E\" : \"I\";\n    personality += counts[1] > counts[5] ? \"N\" : \"S\";\n    personality += counts[2] > counts[6] ? \"T\" : \"F\";\n    personality += counts[3] > counts[7] ? \"P\" : \"J\";\n    return personality;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center vh-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"align-self-center pb-5\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '20rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [\"#\", id, \") \", questionBank[id - 1]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: \"Select one of the following:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onChange: updateAnswers,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: 'radio',\n                  name: id,\n                  id: `${id}A`,\n                  label: \"Agree\",\n                  value: 1,\n                  checked: answers[id] == 1 && 'checked'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: 'radio',\n                  name: id,\n                  id: `${id}B`,\n                  label: \"Neither Agree nor Disagree\",\n                  value: 0,\n                  checked: answers[id] == 0 && 'checked'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: 'radio',\n                  name: id,\n                  id: `${id}C`,\n                  label: \"Disagree\",\n                  value: -1,\n                  checked: answers[id] == -1 && 'checked'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between\",\n              children: [id > 1 ? /*#__PURE__*/_jsxDEV(Link, {\n                to: `${parseInt(id) - 1}`,\n                className: \"text-danger\",\n                children: \"Previous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this) : /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/choice\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-danger\",\n                  size: \"sm\",\n                  children: \"Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 52\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), id < questionBank.length ? /*#__PURE__*/_jsxDEV(Link, {\n                to: `${parseInt(id) + 1}`,\n                style: {\n                  color: '#ff5353'\n                },\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this) : /*#__PURE__*/_jsxDEV(Link, {\n                to: Object.keys(answers).length >= questionBank.length ? `/results/${findPersonality(answers)}` : questionBank.length,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  style: {\n                    backgroundColor: '#ff5353'\n                  },\n                  size: \"sm\",\n                  onClick: () => {\n                    if (Object.keys(answers).length < questionBank.length) {\n                      alert(\"Please answer all of the questions to reveal your wine.\");\n                    }\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Quiz, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/jperakis/Desktop/winefy-front/src/Views/Quiz.jsx"],"names":["React","Link","useParams","Card","Form","Button","Navigation","questionBank","Quiz","answers","setAnswers","id","updateAnswers","e","old","target","value","findPersonality","ans","arr","Object","values","counts","i","length","parseInt","personality","width","color","keys","backgroundColor","alert"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link, useParams } from \"react-router-dom\";\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Navigation from '../Components/Navigation'\nimport { questionBank } from '../Util/QuizBank'\n\nconst Quiz = ({ answers, setAnswers }) => {\n    let { id } = useParams();\n    const updateAnswers = (e) => {\n        setAnswers((old) => ({\n            ...old,\n            [id]: e.target.value,\n        }))\n    }\n\n    const findPersonality = (ans) => {\n        // counts order is E, N, T, P, I, S, F, J\n        let arr = Object.values(ans)\n        let counts = [0,0,0,0,0,0,0,0]\n        for (let i = 0; i < arr.length - 4; i++) {\n            counts[i % 8] += parseInt(arr[i])\n        }\n        let personality = counts[0] > counts[4] ? \"E\" : \"I\";\n        personality += counts[1] > counts[5] ? \"N\" : \"S\";\n        personality += counts[2] > counts[6] ? \"T\" : \"F\";\n        personality += counts[3] > counts[7] ? \"P\" : \"J\";\n        return personality;\n    }\n\n    return (\n        <div>\n            <Navigation />\n            <div className='d-flex justify-content-center vh-100'>\n                <div className='align-self-center pb-5'>\n                <Card style={{ width: '20rem' }}>\n                    <Card.Body>\n                        <Card.Title>#{id}) {questionBank[id - 1]}</Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\">Select one of the following:</Card.Subtitle>\n                        <Form onChange={updateAnswers}>\n                            <Form.Group>\n                                <Form.Check \n                                    type={'radio'}\n                                    name={id}\n                                    id={`${id}A`}\n                                    label='Agree'\n                                    value={1}\n                                    checked={answers[id] == 1 && 'checked'}\n                                />\n                                <Form.Check \n                                    type={'radio'}\n                                    name={id}\n                                    id={`${id}B`}\n                                    label='Neither Agree nor Disagree'\n                                    value={0}\n                                    checked={answers[id] == 0 && 'checked'}\n                                />\n                                <Form.Check \n                                    type={'radio'}\n                                    name={id}\n                                    id={`${id}C`}\n                                    label='Disagree'\n                                    value={-1}\n                                    checked={answers[id] == -1 && 'checked'}\n                                />\n                            </Form.Group>\n                        </Form>\n                        <div className='d-flex justify-content-between'>\n                            {id > 1 ?\n                                <Link to={`${parseInt(id) - 1}`} className='text-danger'>Previous</Link> :\n                                <Link to='/choice'><Button variant=\"outline-danger\" size='sm'>Back</Button></Link>\n                            }\n                            {id < questionBank.length ? \n                                <Link to={`${parseInt(id) + 1}`} style={{color: '#ff5353'}}>Next</Link> : \n                                <Link to={Object.keys(answers).length >= questionBank.length ? `/results/${findPersonality(answers)}` : questionBank.length}>\n                                    <Button variant=\"danger\" style={{backgroundColor: '#ff5353'}} size='sm' onClick={() => {if (Object.keys(answers).length < questionBank.length) {alert(\"Please answer all of the questions to reveal your wine.\")}}}>\n                                        Submit\n                                    </Button>\n                                </Link>\n                            }\n                        </div>\n                    </Card.Body>\n                </Card>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Quiz\n"]},"metadata":{},"sourceType":"module"}